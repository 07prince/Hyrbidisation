# -*- coding: utf-8 -*-
"""Hyrbidisation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17Q5-RKTw6FHQXdxiBEYGI9Mjdlt-XQRu
"""

def generateKey(text, key):
    key = list(key)
    if len(text) == len(key):
        return(key)
    else:
        for i in range(len(text) - len(key)):
            key.append(key[i % len(key)])
    return("" . join(key))

def cipherText(text, key):
    cipher_text = []
    for i in range(len(text)):
        x = (ord(text[i]) + ord(key[i])) % 26
        x += ord('A')
        cipher_text.append(chr(x))
    return("" . join(cipher_text))

def originalText(cipher_text, key):
    orig_text = []
    for i in range(len(cipher_text)):
        x = (ord(cipher_text[i]) - ord(key[i]) + 26) % 26
        x += ord('A')
        orig_text.append(chr(x))
    return("" . join(orig_text))

def polybiusCipher_encrypt(s):
 encpt = ""
 for char in s:

  row = int((ord(char) - ord('a')) / 5) + 1

  col = ((ord(char) - ord('a')) % 5) + 1
  if char == 'k':
    row = row - 1
    col = 5 - col + 1
  elif ord(char) >= ord('j'):
    if col == 1 :
      col = 6
      row = row - 1
    col = col - 1
  r = str(row)
  c = str(col)
  encpt = encpt+r+c
 return encpt

def polybiusCipher_decrypt(s):
  s1 = list(s)
  decpt = ""

  for i in range(0,len(s),2):
    r = int(s1[i])
    c = int(s1[i+1])
    ch = chr(((r-1)*5+c+96))
    if (ord(ch)-96>=10):
      ch = chr(((r-1)*5+c+96+1))
    ch1 = str(ch)
    decpt = decpt + ch1

  return decpt

def assembly(mode):
 text = input("[+] Enter your text - ")
 text = text.upper()
 keyword = input("[+] Enter your key - ")
 keyword = keyword.upper()

 if mode == 0:
  key = generateKey(text,keyword)
  encrypted_text = cipherText(text, key).lower()
  print("Result of Vigenere Cipher - ",encrypted_text)
  print("\n »» The result of encoding by algorithm. ««")
  print(polybiusCipher_encrypt(encrypted_text))
  # print(polybiusCipher_decrypt(encrypted_text))

 else:
  decrypted_text = polybiusCipher_decrypt(text)
  decrypted_text = decrypted_text.upper()
  key = generateKey(decrypted_text,keyword)
  key = key.upper()
  plain_text = originalText(decrypted_text,key)
  print("Result of Polybius Cipher - ",decrypted_text)
  print("\n »» The result of decoding by algorithm. ««")
  print(plain_text)



def main():
 print(".......HYBRIDIZED ALGORITHM.......")
 print(" • 0. ENCODING.\n • 1. DECODING.")
 mode = int(input("[?] SELECT PROGRAM MODE - "))
 assembly(mode)

if __name__ == '__main__':
 main()